name: "Nightly Build"

on:
  schedule:
    - cron: "0 0 * * *" # 每天凌晨 0 点执行
  workflow_dispatch: # 手动触发

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest" # for Intel based macs.
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-22.04"
            args: ""
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install pnpm
        run: npm install -g pnpm

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable # Set this to dtolnay/rust-toolchain@nightly
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: install frontend dependencies
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: pnpm install # change this to npm or pnpm depending on which one you use.

      - name: edit version (linux only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sed -i "s/\"version\": \"[^\"]*\"/\"version\": \"0.0.0-nightly.${{ github.sha }}\"/" src-tauri/tauri.conf.json

      - name: edit version (macos only)
        if: matrix.platform == 'macos-latest' # This must match the platform value defined above.
        run: |
          sed -i '' "s/\"version\": \"[^\"]*\"/\"version\": \"0.0.0-nightly.${{ github.sha }}\"/" src-tauri/tauri.conf.json

      - name: edit version (windows only)
        if: matrix.platform == 'windows-latest' # This must match the platform value defined above.
        run: |
          (Get-Content src-tauri\tauri.conf.json).replace('"version": ".*"', '"version": "0.0.0-nightly.${{ github.sha }}"') | Set-Content src-tauri\tauri.conf.json

      - name: Delete a Release
        uses: liudonghua123/delete-release-action@v1
        with:
          release_name: "Nightly Build"
          suppress_errors: true

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: "nightly"
          releaseName: "Nightly Build"
          releaseBody: ""
          releaseDraft: false
          prerelease: true
          args: ${{ matrix.args }}
